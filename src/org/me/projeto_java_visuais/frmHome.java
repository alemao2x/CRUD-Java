/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.me.projeto_java_visuais;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.me.projeto_java.classes.BDConexao;
import org.me.projeto_java.classes.Livro;

/**
 *
 * @author JOHNKELVINDOSSANTOSG
 */
public class frmHome extends javax.swing.JFrame {

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    static String email;
    int id;

    public frmHome() throws SQLException, ClassNotFoundException {
        initComponents();
        check();
        bemVindo();
        readTable();
        DefaultTableModel modelo = (DefaultTableModel) tbmLivro.getModel();
        tbmLivro.setRowSorter(new TableRowSorter(modelo));
    }

    public void bemVindo() throws ClassNotFoundException, SQLException {
        String email = System.getProperty("usuario", "");
        String nome = getNome(email);
        lblWelc.setText("Bem vindo " + nome + "!");
    }

    public int getNivel(String email) throws ClassNotFoundException, SQLException {
        int nivel = 0;
        ResultSet rs = null;
        PreparedStatement smtm = null;
        try {
            con = BDConexao.bdconexao();
            smtm = con.prepareStatement("select nivel from usuario where email=? limit 1");
            smtm.setString(1, email);
            rs = smtm.executeQuery();
            if (rs.next()) {
                nivel = rs.getInt("nivel");
            }
        } catch (Exception e) {
        } finally {
            con.close();
        }
        return nivel;
    }

    public String getNome(String email) throws ClassNotFoundException, SQLException {
        String nome = null;
        ResultSet rs = null;
        PreparedStatement smtm = null;
        try {
            con = BDConexao.bdconexao();
            smtm = con.prepareStatement("select nome from usuario where email=? limit 1");
            smtm.setString(1, email);
            rs = smtm.executeQuery();
            if (rs.next()) {
                nome = rs.getString("nome");
            }
        } catch (Exception e) {
        } finally {
            con.close();
        }
        return nome;
    }

    public void check() throws ClassNotFoundException, SQLException {
        String email = System.getProperty("usuario", "");
        int nivel = getNivel(email);
        this.setLocationRelativeTo(null);
        if (nivel == 1) {
            btnCadLivro.setVisible(true);
            btnEditar.setVisible(true);
            btnRemover.setVisible(true);
        } else {
            btnCadLivro.setVisible(false);
            btnEditar.setVisible(false);
            btnRemover.setVisible(false);
        }
    }

    public void readTable() throws SQLException, ClassNotFoundException {
        DefaultTableModel modelo = (DefaultTableModel) tbmLivro.getModel();
        modelo.setRowCount(0);
        Livro livrocon = new Livro();
        List<Livro> livro = livrocon.read();
        for (int i = 0; i < livro.size(); i++) {
            modelo.addRow(new Object[]{
                livro.get(i).getId(),
                livro.get(i).getNome_livro(),
                livro.get(i).getNome_autor(),
                livro.get(i).getPreco(),
                livro.get(i).getInformacoes()
            });
        }
    }

    //Preenchendo tabela com o requisitado na pesquisa
    public void readTableForDesc(String desc) throws SQLException, ClassNotFoundException {
        DefaultTableModel modelo = (DefaultTableModel) tbmLivro.getModel();
        modelo.setRowCount(0);
        Livro livrocon = new Livro();
        List<Livro> livro = livrocon.readForDesc(desc);
        for (int i = 0; i < livro.size(); i++) {
            modelo.addRow(new Object[]{
                livro.get(i).getId(),
                livro.get(i).getNome_livro(),
                livro.get(i).getNome_autor(),
                livro.get(i).getPreco(),
                livro.get(i).getInformacoes()
            });
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtPesquisa = new javax.swing.JTextField();
        btnPesq = new javax.swing.JButton();
        btnCadLivro = new javax.swing.JButton();
        lblUser = new javax.swing.JLabel();
        lblWelc = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbmLivro = new javax.swing.JTable();
        btnAbrir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("HOME"));

        txtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaActionPerformed(evt);
            }
        });

        btnPesq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/image/image/if_.svg_2093656.png"))); // NOI18N
        btnPesq.setText("Pesquisar");
        btnPesq.setOpaque(false);
        btnPesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesqActionPerformed(evt);
            }
        });

        btnCadLivro.setText("Cadastrar Livros");
        btnCadLivro.setMaximumSize(new java.awt.Dimension(120, 29));
        btnCadLivro.setMinimumSize(new java.awt.Dimension(120, 29));
        btnCadLivro.setPreferredSize(new java.awt.Dimension(120, 29));
        btnCadLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadLivroActionPerformed(evt);
            }
        });

        lblWelc.setText("jLabel1");

        tbmLivro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Autor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbmLivro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbmLivroMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbmLivro);

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lblUser)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblWelc)
                                .addGap(602, 602, 602))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnRemover, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAbrir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(68, 68, 68))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesq)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCadLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWelc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesq)
                    .addComponent(btnCadLivro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAbrir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemover))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tbmLivro.getModel();
        int reply = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir esse livro?", "Exclusão", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            if (tbmLivro.getValueAt(tbmLivro.getSelectedRow(), 0).toString() == null) {
                JOptionPane.showMessageDialog(null, "Selecione um item.");
            } else {
                try {
                    int id = Integer.parseInt(tbmLivro.getValueAt(tbmLivro.getSelectedRow(), 0).toString());
                    modelo.removeRow(tbmLivro.getSelectedRow());
                    con = BDConexao.bdconexao();
                    pst = con.prepareStatement("delete from livros where id_livro=?");
                    pst.setInt(1, id);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Livro excluido!");

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        con.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String s1;
        DefaultTableModel modelo = (DefaultTableModel) tbmLivro.getModel();
        s1 = tbmLivro.getValueAt(tbmLivro.getSelectedRow(), 0).toString();
        System.setProperty("livro", s1);
        frmEditarLivro edit = null;
        try {
            edit = new frmEditarLivro();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        edit.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        String s1;
        DefaultTableModel modelo = (DefaultTableModel) tbmLivro.getModel();
        s1 = tbmLivro.getValueAt(tbmLivro.getSelectedRow(), 0).toString();
        System.setProperty("livro", s1);
        frmLivro frmlivro = null;
        try {
            frmlivro = new frmLivro();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        frmlivro.setVisible(true);
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void tbmLivroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbmLivroMouseClicked

    }//GEN-LAST:event_tbmLivroMouseClicked

    private void btnCadLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadLivroActionPerformed
        frmCadLivro cadlivro = null;
        try {
            cadlivro = new frmCadLivro();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        cadlivro.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCadLivroActionPerformed

    private void btnPesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesqActionPerformed
        String desc;
        desc = txtPesquisa.getText();
        try {
            readTableForDesc(desc);
        } catch (SQLException ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPesqActionPerformed

    private void txtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmHome().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(frmHome.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnCadLivro;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnPesq;
    private javax.swing.JButton btnRemover;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel lblWelc;
    private javax.swing.JTable tbmLivro;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables
}
